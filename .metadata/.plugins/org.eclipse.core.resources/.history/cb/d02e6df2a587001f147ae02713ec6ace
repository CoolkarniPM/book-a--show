package com.bookingmanagement.serviceImpl;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bookingmanagement.entity.Booking;
import com.bookingmanagement.entity.Seat;
import com.bookingmanagement.repo.BookingRepository;
import com.bookingmanagement.repo.SeatRepository;
import com.bookingmanagement.service.BookingService;

@Service
public class BookingServiceImpl implements BookingService {

    @Autowired
    private BookingRepository bookingRepository;

    @Autowired
    private SeatRepository seatRepository;

    @Override
    public Booking createBooking(Long userId, Long showId, int numberOfSeats, List<String> seatNumbers) {
        Booking booking = new Booking();
        booking.setUserId(userId);
        booking.setShowId(showId);
        booking.setNumberOfSeats(numberOfSeats);
        
        // Create and assign seats to the booking
        List<Seat> seats = seatNumbers.stream()
                                      .map(seatNumber -> new Seat(seatNumber, booking)) // assuming Seat constructor takes seatNumber and booking
                                      .collect(Collectors.toList());
        
        booking.setSeats(seats);  // Set the seats in the booking
        booking.setStatus("CONFIRMED");
        booking.setBookingTime(LocalDateTime.now());
        booking.setTotalPrice(calculatePrice(numberOfSeats));
        
        return bookingRepository.save(booking);
    }

    @Override
    public List<Booking> getBookingsByUser(Long userId) {
        return bookingRepository.findByUserId(userId);
    }

    @Override
    public void cancelBooking(Long bookingId) {
        Booking booking = bookingRepository.findById(bookingId)
            .orElseThrow(() -> new RuntimeException("Booking not found"));
        booking.setStatus("CANCELLED");
        bookingRepository.save(booking);
    }

    private double calculatePrice(int numberOfSeats) {
        // Price calculation logic can go here
        return numberOfSeats * 10.0; // Example: $10 per seat
    }
}

